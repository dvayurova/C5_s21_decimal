gcc -Wall -Werror -Wextra -std=c11 -g -c s21*.c
ar r s21_decimal.a s21*.o
gcc -Wall -Werror -Wextra -std=c11 -g unit_tests.c s21_decimal.a -o test.out -lcheck
./test.out	
Running suite(s): s21_add
96%: Checks: 102, Failures: 4, Errors: 0
unit_tests.c:6449:F:case_add:s21_test_decimal_add_29:0: Assertion 'add == 0' failed: add == 2, 0 == 0 -  НЕВЕРНО ВОЗВРАЩАЕТ КОД  ПРИ ПЕРЕВОДЕ ИЗ ЛОНГ В ДЕЦИМАЛ
unit_tests.c:5731:F:case_add:add_test_24:0: Assertion 'res.bits[3] == res1.bits[3]' failed: res.bits[3] == 3145728, res1.bits[3] == 1048576  ЛОМАЕТСЯ ПРИ ПЕРЕВОДЕ ИЗ ЛОНГ В ДЕЦИМАЛ  И ТЕСТ САМ НЕ ОЧ
unit_tests.c:6885:F:case_add:s21_add_max_34:0: Assertion 's21_add(src1, src2, &s21_res) == 0' failed: s21_add(src1, src2, &s21_res) == 2, 0 == 0 - ЛОМАЕТСЯ ПРИ ПЕРЕВОДЕ ИЗ ЛОНГ В ДЕЦИМАЛ И НЕВЕРНО ВОЗВРАЩАЕТ КОД
unit_tests.c:6911:F:case_add:s21_add_max_35:0: Assertion 's21_add(src1, src2, &s21_res) == 0' failed: s21_add(src1, src2, &s21_res) == 2, 0 == 0 - ЛОМАЕТСЯ ПРИ ПЕРЕВОДЕ ИЗ ЛОНГ В ДЕЦИМАЛ И НЕВЕРНО ВОЗВРАЩАЕТ КОД
Running suite(s): s21_sub
82%: Checks: 75, Failures: 13, Errors: 0
unit_tests.c:2722:F:case_sub:s21_subTest17:0: Assertion 'origin.bits[3] == result.bits[3]' failed: origin.bits[3] == 2148401152, result.bits[3] == 2147483648 ЛОМАЕТСЯ ПРИ ПЕРЕВОДЕ ИЗ ЛОНГ В ДЕЦИМАЛ + ВОЗМОЖНО В САМОМ ТЕСТЕ РЕЗУЛЬТАТ ДРУГОЙ
unit_tests.c:2789:F:case_sub:s21_subTest19:0: Assertion 'origin.bits[3] == result.bits[3]' failed: origin.bits[3] == 2148597760, result.bits[3] == 2147483648
unit_tests.c:2818:F:case_sub:s21_subTest20:0: Assertion 'origin.bits[3] == result.bits[3]' failed: origin.bits[3] == 2148597760, result.bits[3] == 2147483648
unit_tests.c:2847:F:case_sub:s21_subTest21:0: Assertion 'origin.bits[3] == result.bits[3]' failed: origin.bits[3] == 1114112, result.bits[3] == 0
unit_tests.c:2876:F:case_sub:s21_subTest22:0: Assertion 'origin.bits[3] == result.bits[3]' failed: origin.bits[3] == 1114112, result.bits[3] == 0
unit_tests.c:3166:F:case_sub:s21_subTest32:0: Assertion 'origin.bits[3] == result.bits[3]' failed: origin.bits[3] == 2148007936, result.bits[3] == 2147483648
unit_tests.c:2052:F:case_sub:s21_sub_inf_27:0: Assertion '1 == ret_s21' failed: 1 == 1, ret_s21 == 0
unit_tests.c:2062:F:case_sub:s21_sub_neg_inf_28:0: Assertion '2 == ret_s21' failed: 2 == 2, ret_s21 == 0
unit_tests.c:2126:F:case_sub:s21_sub_max_30:0: Assertion 'original_res.bits[0] == s21_res.bits[0]' failed: original_res.bits[0] == 4294967294, s21_res.bits[0] == 0
unit_tests.c:2152:F:case_sub:s21_sub_max_31:0: Assertion 'original_res.bits[0] == s21_res.bits[0]' failed: original_res.bits[0] == 4294967294, s21_res.bits[0] == 0
unit_tests.c:2197:F:case_sub:s21_sub_max_33:0: Assertion 's21_sub(src1, src2, &s21_res) == 2' failed: s21_sub(src1, src2, &s21_res) == 0, 2 == 2
unit_tests.c:2213:F:case_sub:s21_sub_max_34:0: Assertion 's21_sub(src1, src2, &s21_res) == 2' failed: s21_sub(src1, src2, &s21_res) == 0, 2 == 2
unit_tests.c:2229:F:case_sub:s21_sub_max_35:0: Assertion 's21_sub(src1, src2, &s21_res) == 2' failed: s21_sub(src1, src2, &s21_res) == 0, 2 == 2
Running suite(s): s21_is_equal
100%: Checks: 47, Failures: 0, Errors: 0
Running suite(s): s21_is_not_equal
100%: Checks: 7, Failures: 0, Errors: 0
Running suite(s): s21_greater
100%: Checks: 61, Failures: 0, Errors: 0
Running suite(s): s21_greater_or_equal
100%: Checks: 13, Failures: 0, Errors: 0
Running suite(s): s21_is_less
100%: Checks: 8, Failures: 0, Errors: 0
Running suite(s): s21_less_or_equal
100%: Checks: 71, Failures: 0, Errors: 0
